name: Build Latest

on:
  push:
    branches: [ main, RSDK-2895 ]
    paths-ignore:
      - 'README.md'

jobs:
  appimage:
    name: AppImage Build
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: [buildjet-2vcpu-ubuntu-2204-arm]
            image: ghcr.io/seanavery/viam-cpp-jetson:0.0.1
            platform: linux/arm64
    runs-on: ${{ matrix.arch }}
    container:
      image: ${{ matrix.image }}
      options: --platform ${{ matrix.platform }}
    timeout-minutes: 15
    outputs:
      date: ${{ steps.build_date.outputs.date }}

# Using docker here for congruence
# with local dev env.
# TODO: move to viam-cpp-jetson base and use bash instead of docker
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Clean build artifacts
        run: make clean

      - name: Install module dependencies
        run: make dep

      - name: Build viam-csi binary
        run: make build

      - name: Build viam-csi appimage
        run: make package

      - name: Copy binary and appimage to bin folde 
        run: make bin

      - name: Run appimage in fresh L4T instance
        run: |
          make image-test
          make test-package
      
      - name: Authorize GCP upload
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Deploy Files
        uses: google-github-actions/upload-cloud-storage@v0.10.4
        with:
          headers: "cache-control: no-cache"
          path: 'bin'
          destination: 'packages.viam.com/apps/csi-camera/'
          glob: '*aarch64*'
          parent: false
          gzip: false
# TODO: Run cpp tests
